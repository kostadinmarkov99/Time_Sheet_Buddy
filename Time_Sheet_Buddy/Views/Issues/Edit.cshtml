@using Microsoft.AspNetCore.Mvc.Rendering;
@using Time_Sheet_Buddy.Models;

@model Time_Sheet_Buddy.Entities.Issue

@{
    ViewBag.Title = "Edit";
}

@{
    bool isAdmin = User.IsInRole("Admin");
}

@{
    var users = ViewData["Users"] as List<ApplicationUser>;
}


<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>IssueTracker</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        @if (!User.IsInRole("Administrator"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (!User.IsInRole("Administrator"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        @if (!User.IsInRole("Administrator"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        @if (!User.IsInRole("Administrator"))
        {
            <div class="form-group">
                @Html.DropDownListFor(m => m.AssignedTo, (SelectList)ViewBag.Users, "Seleccionar", new { @class = "form-control", @readonly = "readonly" })
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.DropDownListFor(m => m.AssignedTo, (SelectList)ViewBag.Users, "Seleccionar", new { @class = "form-control" })
            </div>
        }

        @if (!User.IsInRole("Administrator"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.DropDownListFor(model => model.State, (SelectList)ViewBag.States, "--Select", new { @class = "form-control" })
        </div>

        @if (!User.IsInRole("Administrator"))
        {
            <div class="form-group">
                @Html.DropDownListFor(model => model.Project, (SelectList)ViewBag.Projects, "--Select--", new { @class = "form-control", @readonly = "readonly" })
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.DropDownListFor(model => model.Project, (SelectList)ViewBag.Projects, "--Select--", new { @class = "form-control" })
            </div>
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
