@using Microsoft.AspNetCore.Mvc.Rendering;
@using Time_Sheet_Buddy.Models;

@model IEnumerable<Time_Sheet_Buddy.Entities.Projectcs>

@section BacklogIndexStyles{
    <link rel="stylesheet" href="~/css/BacklogIndexStyle.css" />
}

@{
    var projects = ViewData["ProjectsList"] as List<ApplicationUser>;

    var itemsCount = ViewData["BacklogItemsCount"] as Dictionary<string, int>;

    var themaToShow = ViewData["ThemaToShow"] as byte[];
}

<!DOCTYPE html>
<html style="background-image:url(data:image/gif;base64,@(Convert.ToBase64String(themaToShow))">
<head>
</head>
<body style="background-image:url(data:image/gif;base64,@(Convert.ToBase64String(themaToShow))">



    <div class="form-container">
        <div class="form-content">
            <!-- The Modal -->
            <div id="myModalProj" class="modalProj">

                <!-- Modal content -->
                <div class="modal-contentProj">
                    <span class="closeProj">&times;</span>
                    <label>Select the Backlog name:</label>
                    <input id="projNameInput" />
                    <button id="saveProj">Save</button>
                </div>

            </div>

            <!-- The Modal -->
            <div id="myModalChart" class="modalProj">

                <!-- Modal content -->
                <div class="modal-contentProj">
                    <span class="closeChart">&times;</span>
                    <div class="card-body">
                        <canvas id="myChart"></canvas>
                    </div>
                </div>

            </div>

            <div class="form-group">
                <div id="newProject">
                    <label>
                        Add New Project (Backlog)
                    </label>
                    <input id="addProjectButton" onclick="addNewProjectClicked()" type="image" class="add-btn-img" src="~/images/addProject.png" alt="Add Project" value="Add new Backlog" />
                </div>
            </div>

            <div class="form-group">
                <div id="select">

                    <table id="backlogs">
                        <tr>
                            <th>Project Name</th>
                            <th>Number of issues</th>
                        </tr>
                        @foreach (var project in itemsCount)
                        {
                            <tr id="@project.Key">
                                <td>@project.Key</td>
                                <td>@project.Value</td>
                            </tr>
                        }
                    </table>
                </div>

                <input type="submit" value="Open Backlog" onclick="backlogSelected()" />

            </div>
        </div>
    </div>

    <script>
    window.onload = function () {
        @*var img = new Image();

        img.src = themaToShow + "";

        document.body.style.backgroundImage = "url('" + img.src + "')";*@
    }

    function selectedRow() {

        var index,
            table = document.getElementById("backlogs");

        for (var i = 1; i < table.rows.length; i++) {
            table.rows[i].onclick = function () {
                // remove the background from the previous selected row

                if (typeof index !== "undefined") {
                    table.rows[index].classList.toggle("selected");
                }
                //console.log(typeof index);
                // get the selected row index
                index = this.rowIndex;
                //add class selected to the row
                this.classList.toggle("selected");
                //console.log(this);
                //console.log(typeof index);
                var bId = this.id;
            };
        }
    }
    selectedRow();


        function addNewProjectClicked() {
        // Get the modal
        var modalProj = document.getElementById("myModalProj");

        // Get Save Button
        var buttonProj = document.getElementById("saveProj");

        // Get the button that opens the modal
        var btnProj = document.getElementById("newProject");
        //console.log(projId.trim());
        //console.log(projId);
        //console.log(btnProj);
        // Get the <span> element that closes the modal
        var spanProj = document.getElementsByClassName("closeProj")[0];

        // When the user clicks the button, open the modal
        btnProj.onclick = function () {
            modalProj.style.display = "block";
        }

        // When the user clicks on <span> (x), close the modal
        spanProj.onclick = function () {
            modalProj.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modalProj) {
                modalProj.style.display = "none";
            }
        }

        buttonProj.addEventListener('click', () => {
            var newProj = document.getElementById('projNameInput');
            var valueProj = newProj.value;
            modalProj.style.display = "none";
            //btnProj.innerText = "Project: " + valueProj;

            createNewBacklog(valueProj);
        })
    }

    function backlogSelected() {
        var selectedTd = document.getElementsByClassName("selected");

        var delectedTr = selectedTd[0];

        var valueProj = delectedTr.getElementsByTagName("td")[0].innerText;

        @*var selectProj = document.getElementById('id_project_list');
        console.log(selectProj);
        var valueProj = selectProj.options[selectProj.selectedIndex].value;
        console.log(valueProj);*@

        window.location.href = "Backlogs/ProjectBacklog?proj=" + valueProj;
    }

    function createNewBacklog(newBacklogName) {
        var request = new XMLHttpRequest();
        window.location.href = "Backlogs/ProjectBacklog?proj=" + newBacklogName;
        //debugger;
       @* var o = new Object();
        o.newBacklogName = newBacklogName;

        request.open('POST', '/Backlogs/BacklogCreation', true);
        request.setRequestHeader('Content-Type', 'application/json; charset=utf-8');
        request.setRequestHeader('Content-Length', JSON.stringify(o).length);
        request.onreadystatechange = function () {
            if (request.readyState == 4 && request.status == 200) {
                //console.log(request.responseText)
            }
        }
        request.send(JSON.stringify(o));*@
    }
    </script>
</body>
</html>